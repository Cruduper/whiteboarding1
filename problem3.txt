Question #3: Compressing Strings

Write an algorithm that takes a string with repeated characters and compresses them, using a number to show how many times the repeated character has been compressed. For instance, aaa would be written as 3a. Solve the problem with and without recursion.
Example

Input: "aaabccdddda"

Output: "3ab2c4da"

input = "aaabccdddda"; 





function compressString(input){
	
  let outputArr = new Array(0);
	let counter = 1;

	for(let i = 0; i < input.length; i++){
  	
  	if( input[i] === input[i+1]){
    	counter++;
    }
    else if (counter > 1)
    {
    	outputArr.push(counter);
      outputArr.push(input[i]);
      counter = 1;
    }
    else {
    	outputArr.push(input[i]);
    }
  }
  output = outputArr.join("");
	return output;
}

console.log(compressString(input)); //Output: "3ab2c4da"